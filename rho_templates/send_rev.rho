new
  rl(`rho:registry:lookup`), stdout(`rho:io:stdout`),
  revVaultCh, log
in {
  rl!(`rho:rchain:revVault`, *revVaultCh) |
  for (@(_, revVault) <- revVaultCh) {
    match ("%from%", "%to%", %amount%) {
      (from, to, amount) => {
        new vaultCh, revVaultKeyCh, deployerId(`rho:rchain:deployerId`) in {
          @revVault!("findOrCreate", from, *vaultCh) |
          @revVault!("deployerAuthKey", *deployerId, *revVaultKeyCh) |
          for (@(true, vault) <- vaultCh; key <- revVaultKeyCh) {
            new resultCh in {
              @vault!("transfer", to, amount, *key, *resultCh) |
              for (@result <- resultCh) {
                match result {
                  (true, _) => {log!("TX from %from% to %to% succeed.")}
                  (false, reason) => {log!("TX from %from% to %to% failed. Reason: '${reason}'" %% {"reason": reason})}
                }
              }
            }
          }
        }
      }
    }
  } |
  contract log(@data) = {
    stdout!("%log_marker%: " ++ data ++ ". Deployed to %validator% at %now% UTC.")
  }
}
